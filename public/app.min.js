(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
/** @jsx React.DOM */

// var React = require('react');
window.React = React;

var Presentation = require('./presentation');
var App = React.createClass({displayName: "App",
    render: function() {
        return (
            React.createElement("div", null, 
                React.createElement(Presentation, null)
            )
        );
    }
});

React.render(React.createElement(App, null), document.body);


},{"./presentation":2}],2:[function(require,module,exports){
/** @jsx React.DOM */
// pres is for Presentation
var Slide = require('./slide');

var SLIDE_SPLIT_EXP = new RegExp("(^\s*$)|(;;)", "m");
function splitBySlides(str) {
    var slides = [];
    var parsed = str.split(SLIDE_SPLIT_EXP);
    for(var i=0; i < parsed.length; i++) {
        if (parsed[i] ) {
            slides.push(parsed[i].trim());
        }
    }
    return slides;
}

var Presentation = React.createClass({displayName: "Presentation",
    getDefaultProps: function () {
       return {
           text: "Welcome to the Slide Show;;This is the end",
       };
    },

    getInitialState: function () {
        return {current: 0, top: "0px"};
    },

    getTopPosition: function (index) {
        var slides = document.getElementsByClassName("slide");
        var height = 0;
        var toppx = 0;
        // early return
        if (slides.length === 0) return;

        // iterate through all the slides above this one
        for (var i=0; i < index; i++) {
            height = height + slides[i].clientHeight; 
        }

        // plus 1/2 the height of the current slide
        height = height + (slides[i].clientHeight/2);

        // match the middle of the window
        toppx = (window.innerHeight/2) - height;
        return toppx;
    },

    render: function () {
        var pres = this;
        var textList = splitBySlides(this.props.text);
        var slides = textList.map(function(t, i) {
            return (
                React.createElement(Slide, {text: t, onClick: pres.gotoSlide.bind(null, i)})
            )
        });

        var presStyle = {
            top: this.state.top
        };

        return (
            React.createElement("div", {id: "wrapper"}, 
                React.createElement("div", {id: "presentation", style: presStyle}, 
                    slides
                ), 
                React.createElement("div", {className: "marker"})
            )
        )
    },

    componentDidMount: function () {
        console.log('presentation did update');
        this.gotoSlide(0);
    },

    componentWillUpdate: function(nextProps, nextState) {
        console.log("componentWillUpdate", this.state, nextProps, nextState);
    },

    gotoSlide: function(index) {
        console.log("goToSlide", index);
        this.setState({current: index, top: this.getTopPosition(index) + 'px'});
    }
});

module.exports = Presentation;


},{"./slide":3}],3:[function(require,module,exports){
/** @jsx React.DOM */
var Slide = React.createClass({displayName: "Slide",
    getDefaultProps: function(){ return { text: "Slide..." } },

    render: function () {
        return (
            React.createElement("div", {className: "slide", onClick: this.props.onClick}, 
                React.createElement("p", {className: "lyrics"}, this.props.text)
            )
        );
    }
});

module.exports = Slide;


},{}]},{},[1]);
