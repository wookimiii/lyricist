(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
function classNames() {
	var classes = '';
	var arg;

	for (var i = 0; i < arguments.length; i++) {
		arg = arguments[i];
		if (!arg) {
			continue;
		}

		if ('string' === typeof arg || 'number' === typeof arg) {
			classes += ' ' + arg;
		} else if (Object.prototype.toString.call(arg) === '[object Array]') {
			classes += ' ' + classNames.apply(null, arg);
		} else if ('object' === typeof arg) {
			for (var key in arg) {
				if (!arg.hasOwnProperty(key) || !arg[key]) {
					continue;
				}
				classes += ' ' + key;
			}
		}
	}
	return classes.substr(1);
}

// safely export classNames in case the script is included directly on a page
if (typeof module !== 'undefined' && module.exports) {
	module.exports = classNames;
}

},{}],2:[function(require,module,exports){
/** @jsx React.DOM */
var Form = React.createClass({displayName: "Form",
    render: function(ctrl) {
        var styles = {
            boxSizing: 'border-box',
            width: '100%',
            padding: '10px'
        };

        console.log("Form props: ", this.props);
        return (
            React.createElement("div", {style: styles}, 
                React.createElement("textarea", {id: "text", onKeyUp: this.updateText}, this.props.text)
            )
        );
    },

    updateText: function(e) {
        console.log("update");
        console.log(e.target.value);
        this.props.update(e.target.value);
    }
    
});

module.exports = Form;


},{}],3:[function(require,module,exports){
/** @jsx React.DOM */

var MenuBar = React.createClass({displayName: "MenuBar",
    getInitialState: function () {
        return {
            visible: false
        };
    },

    render: function () {
        var style = {
            opacity: this.state.visible ? 1 : 0,
            borderLeft: "1px solid rgba(0,0,0,0.14)"
        };

        var attrs = {
            className: 'menu',
            style: style,
            onMouseOver: this.show,
            onMouseLeave: this.hide
        };
        var overlay = "";
        if (this.state.visible) {
           overlay = React.createElement("div", {className: "overlay", style: this.overlayStyles()}) 
        }

        return (
                React.createElement("div", null, 
                    React.createElement("div", React.__spread({},  attrs), 
                        React.createElement("h3", null, "Navigate"), 
                        React.createElement("a", {onClick: this.gotoPage.bind(null, "form")}, "Edit"), 
                        React.createElement("a", {onClick: this.gotoPage.bind(null, "presentation")}, "Present")
                    ), 
                    overlay
                )
               );
    },

    show: function () {
        this.setState({visible: true});
    },

    hide: function () {
        this.setState({visible: false});
    },
    gotoPage: function (page) {
        console.log(page);
        console.log(this.props);
        this.props.gotoPage(page);
    },
    overlayStyles: function () {
        return {
            position: 'absolute',
            top: 0,
            left: 0,
            right: 0,
            bottom: 0,
            background: "rgba(0, 0, 0, 0.5)",
            zIndex: 3
        };
    }

});

module.exports = MenuBar;


},{}],4:[function(require,module,exports){
/** @jsx React.DOM */

// var React = require('react');
window.React = React;

var Presentation = require('./presentation.js');
var MenuBar = require('./MenuBar.js');
var Form = require('./Form.js');

var App = React.createClass({displayName: "App",
    getInitialState: function () {
        return {
            page: "form",
            text: "Welcome to the Slide Show;;This is the end"
        };
    },
    render: function() {
        console.log(this.state);
        var page = this.state.page;
        return (
            React.createElement("div", null, 
                React.createElement(MenuBar, {gotoPage: this.gotoPage}), 
                this.show(page)
            )
        );
    },

    show: function (page) {
       var pages = {
           "presentation": React.createElement(Presentation, {text: this.state.text}),
           "form": this.form()
       }
       return pages[page];
    },

    form: function () {
        return (
            React.createElement(Form, {text: this.state.text, update: this.updateText.bind(this)})
        );
    },

    updateText: function(text) {
        this.setState({text: text});
    },
    gotoPage: function(page) {
        this.setState({page: page});
    }
});



React.render(React.createElement(App, null), document.body);


},{"./Form.js":2,"./MenuBar.js":3,"./presentation.js":5}],5:[function(require,module,exports){
/** @jsx React.DOM */
// pres is for Presentation
var Slide = require('./slide');

var SLIDE_SPLIT_EXP = new RegExp("(^\s*$)|(;;)", "m");
function splitBySlides(str) {
    var slides = [];
    var parsed = str.split(SLIDE_SPLIT_EXP);
    for(var i=0; i < parsed.length; i++) {
        if (parsed[i] ) {
            slides.push(parsed[i].trim());
        }
    }
    return slides;
}

var Presentation = React.createClass({displayName: "Presentation",
    getDefaultProps: function () {
       return {
           text: "Welcome to the Slide Show;;This is the end",
       };
    },

    getInitialState: function () {
        return {current: 0, top: "0px"};
    },

    getTopPosition: function (index) {
        var slides = document.getElementsByClassName("slide");
        var height = 0;
        var toppx = 0;
        // early return
        if (slides.length === 0) return;

        // iterate through all the slides above this one
        for (var i=0; i < index; i++) {
            height = height + slides[i].clientHeight; 
        }

        // plus 1/2 the height of the current slide
        height = height + (slides[i].clientHeight/2);

        // match the middle of the window
        toppx = (window.innerHeight/2) - height;
        return toppx;
    },

    render: function () {
        var pres = this;
        var textList = splitBySlides(this.props.text);
        var slides = textList.map(function(t, i) {
            console.log(pres.state.current, i);
            var className = pres.state.current  === i ? 'current' : '';
            return (
                React.createElement(Slide, {className: className, text: t, onClick: pres.gotoSlide.bind(null, i)})
            )
        });

        var presStyle = {
            top: this.state.top
        };

        return (
            React.createElement("div", {id: "wrapper"}, 
                React.createElement("div", {id: "presentation", style: presStyle}, 
                    slides
                )
            )
        )
    },

    componentDidMount: function () {
        console.log('presentation did update');
        this.gotoSlide(0);
    },

    componentWillUpdate: function(nextProps, nextState) {
        console.log("componentWillUpdate", this.state, nextProps, nextState);
    },

    gotoSlide: function(index) {
        console.log("goToSlide", index);
        this.setState({current: index, top: this.getTopPosition(index) + 'px'});
    }
});

module.exports = Presentation;


},{"./slide":6}],6:[function(require,module,exports){
/** @jsx React.DOM */
var cx = require('classnames');

var Slide = React.createClass({displayName: "Slide",
    getDefaultProps: function(){ return { text: "Slide..." } },

    render: function () {
        var className =  cx('slide', this.props.className);      
        var text = this.props.text.replace("\n", "<br />");
        return (
            React.createElement("div", {className: className, onClick: this.props.onClick}, 
                React.createElement("p", {className: "lyrics"}, this.props.text)
            )
        );
    }
});

module.exports = Slide;


},{"classnames":1}]},{},[4]);
